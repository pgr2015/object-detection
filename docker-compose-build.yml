#
# NVISO CONFIDENTIAL
#
# Copyright (c) 2017 nViso SA. All Rights Reserved.
#
# The source code contained or described herein and all documents related to
# the source code ("Material") is the confidential and proprietary information
# owned by nViso or its suppliers or licensors.  Title to the  Material remains
# with nViso SA or its suppliers and licensors. The Material contains trade
# secrets and proprietary and confidential information of nViso or its
# suppliers and licensors. The Material is protected by worldwide copyright and trade
# secret laws and treaty provisions. You shall not disclose such Confidential
# Information and shall use it only in accordance with the terms of the license
# agreement you entered into with nViso.
#
# NVISO MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF
# THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
# TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE, OR NON-INFRINGEMENT. NVISO SHALL NOT BE LIABLE FOR
# ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR
# DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.
#
version: '3'

services:

  mnist-lasagne-base:
    build:
        context: .
        dockerfile: containers/mnist_lasagne_base/Dockerfile
        args:
            - http_proxy
            - https_proxy
            - no_proxy
            - IMAGE_TAG
    image: mnist-lasagne-base:${IMAGE_TAG}
    depends_on:
        - bonseyes-base
        
  mnist-import:
    build:
        context: .
        dockerfile: containers/mnist_import/Dockerfile
        args:
            - http_proxy
            - https_proxy
            - no_proxy
            - IMAGE_TAG
    image: mnist-import:${IMAGE_TAG}
    depends_on:
        - bonseyes-base

        
  youtubebb-import:
    build:
        context: .
        dockerfile: containers/youtubebb_import/Dockerfile
        args:
            - http_proxy
            - https_proxy
            - no_proxy
            - IMAGE_TAG
    image: youtubebb-import:${IMAGE_TAG}
    depends_on:
        - bonseyes-base      
        

  mnist-export:
    build:
        context: .
        dockerfile: containers/mnist_export/Dockerfile
        args:
            - http_proxy
            - https_proxy
            - no_proxy
            - IMAGE_TAG
    image: mnist-export:${IMAGE_TAG}
    depends_on:
        - bonseyes-base

        
  youtubebb-export:
    build:
        context: .
        dockerfile: containers/youtubebb_export/Dockerfile
        args:
            - http_proxy
            - https_proxy
            - no_proxy
            - IMAGE_TAG
    image: youtubebb-export:${IMAGE_TAG}
    depends_on:
        - bonseyes-base      
        

  mnist-train-validation-split:
    build:
        context: .
        dockerfile: containers/mnist_train_validation_split/Dockerfile
        args:
            - http_proxy
            - https_proxy
            - no_proxy
            - IMAGE_TAG
    image: mnist-train-validation-split:${IMAGE_TAG}
    depends_on:
        - bonseyes-base
        
  youtubebb-train-validation-split:
    build:
        context: .
        dockerfile: containers/youtubebb_train_validation_split/Dockerfile
        args:
            - http_proxy
            - https_proxy
            - no_proxy
            - IMAGE_TAG
    image: youtubebb-train-validation-split:${IMAGE_TAG}
    depends_on:
        - bonseyes-base 
    

  mnist-training:
    build:
        context: .
        dockerfile: containers/mnist_training/Dockerfile
        args:
            - http_proxy
            - https_proxy
            - no_proxy
            - IMAGE_TAG
    image: mnist-training:${IMAGE_TAG}
    depends_on:
        - mnist-lasagne-base
        

        
  mnist-benchmarking:
    build:
        context: .
        dockerfile: containers/mnist_benchmarking/Dockerfile
        args:
            - http_proxy
            - https_proxy
            - no_proxy
            - IMAGE_TAG
    image: mnist-benchmarking:${IMAGE_TAG}
    depends_on:
        - mnist-lasagne-base
        

  mnist-pipeline:
    build:
        context: .
        dockerfile: containers/mnist_pipeline/Dockerfile
        args:
            - http_proxy
            - https_proxy
            - no_proxy
            - IMAGE_TAG
    image: mnist-pipeline:${IMAGE_TAG}
    depends_on:
        - bonseyes-base

        
  youtubebb-pipeline:
    build:  
        context: .
        dockerfile: containers/youtubebb_pipeline/Dockerfile
        args:
            - http_proxy
            - https_proxy
            - no_proxy
            - IMAGE_TAG
    image: youtubebb-pipeline:${IMAGE_TAG}
    depends_on:
        - bonseyes-base
